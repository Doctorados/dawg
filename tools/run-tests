#!/bin/bash
# run-tests --- Run unit tests in mocha - passing commandline options.

set -e

cd $PROJ_DIR

if [[ ! -d "node_modules" ]]; then
  echo "Project not yet configured to run tests."
  echo "Run: configure-project command."
  exit 1
fi

ALL_FLAGS="build cover debug grep"
build_help="Rebuild before running tests."
cover_help="Open code coverage in browser after running tests."
debug_help="Use Chrome Dev Tools to debug test."
grep_help="<pattern> Only run tests whose description matches pattern."

usage () {
  echo "My command description."
  usage_helper
  echo "extra command args"
   show_help "  --" $ALL_FLAGS
}
source $TOOLS_DIR/bash-helper

if [[ $cover_flag && $debug_flag ]]; then
  echo "--debug flags takes precedence over --cover"
fi

MOCHA_ARGS="--ui tdd --require source-map-support/register lib/test"
EXTRA_MOCHA_ARGS=""

if [[ $grep_flag ]]; then
  EXTRA_MOCHA_ARGS="--grep"
fi

if [[ $build_flag ]]; then
  build-project
fi

echo -e "\nmocha $MOCHA_ARGS $EXTRA_MOCHA_ARGS ..."

# Use istanbul for code coverage, while using mocha as the test runner.
if [[ $debug_flag ]]; then
  mocha --inspect --debug-brk $MOCHA_ARGS $EXTRA_MOCHA_ARGS "$@"
elif [[ $cover_flag ]]; then
  istanbul cover --print detail _mocha -- $MOCHA_ARGS $EXTRA_MOCHA_ARGS "$@"
else
  mocha $MOCHA_ARGS $EXTRA_MOCHA_ARGS "$@"
fi

# Open lcov coverage report in the browser (this probably only works on Mac).
if [[ $cover_flag ]]; then
  open coverage/lcov-report/lib/index.html
fi
